'''
Created on Apr 20, 2012

@author: l0r3zz
'''
man_page ="""
     <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<html>
<head>
<title>ESXPLOT(1) manual page</title>
</head>
<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
esxplot - plot data from esxtop batch mode
<h2><a name='sect1' href='#toc1'>Synopsis</a></h2>
<b>esxplot[.py]
</b> <b>[-d | -l </b> <i>logfile_path</i>  <b>]</b> <b>[</b> <i>data_file</i>
<b>] </b>
<h2><a name='sect2' href='#toc2'>Description</a></h2>
<b>esxplot</b> is a GUI application
that lets you explore the data collected by  <b>esxtop</b> in batch mode.
The program
takes a single command line argument which is the esxtop batch mode output
file.  You can also  simply start  <b>esxplot</b> without any arguments,
and enter
a dataset file via the  <i>File</i> attribute of the menu bar. Esxplot loads the
data in this file and presents the metrics as a hierarchical tree where
the values are selectable in the left panel. In the right panel, a graph
is plotted (value over time) of the selected metric, in this way, you can
"browse" the contents of these somewhat unwieldy files.
<p> Once you load a
data set, the name of the machine will appear at the root node of a treectrl
navigation widget at the lower left side of the tool. if you double-click
on the name, all of the available categories of the metrics gathered for
this machine will appear in an alphabetically sorted tree. Click on one
of these branches to display the leaves. Clicking on a leaf activates the
plot for that metric.  Nodes and Leaves that are "greyed out" can still
be plotted but the greying is an indication to you that the values of these
graphs will be zero allong the Y axis. Holding down the  <i>Ctrl</i> key while
making a mouse selection will allow for multiple selections to be plotted,
up to a maximum of sixteen. Time based data is plotted in the large window
on the right, the host name is present on the top of the graph, to the
right of the graph there is a legend, with the name of the category and
metric for each line plotted,  the legend can be abbreviated by changing
a value in the  <i>preferences</i> dialogue panel.  You can export the plots as
a .jpg, ,png and .bmp.
<p> <b>Esxplot</b> allows you to zoom into a plot to examine
elements of the plot at a fine level of granulation.  To do this, place
the mouse in the plotting canvas, depress and hold left-button while you
drag to describe a bounding rectangle encompassing the area of the plot
that you want to examine more closely, when you release the left-button
the graph is redrawn within the boundaries of the area that you inscribed.
To zoom back out to baseline, double-click the left-button.
<p> The application
is constructed in such a way that the plotting area can be expanded and
contracted along the left side of the plotting area. To do this, position
the mouse over the boundary between the treecontrol/textcontrol area and
the plotting canvas, approximately in the center, hold left-button down
and drag to the right or the left to resize the plotting canvas.
<p> The panel
on the left contains a status text window where information and statistics
will appear as esxplot goes about its work.   This window is read-only.
<b>Esxplot </b> prints messages upon start-up, when you load a dataset, and also
when you select a metric for plotting, when the metric is selected, the
Min, Max, and Mean values for the metric are printed in this window.  The
window scrolls so no data is lost during your browsing session.  You can
also copy data from this section to paste into other applications.
<p> Beneath
that, there is a  second text window which is writeable.  This window allows
you to enter complex multi line regular expressions, which will be applied
against the metric descriptions for the columns making up the treecontrol.
 Pleae note that you must click the <i>GO</i> button in order to execute
the query,
ending the query by a carriage return will not cause the query to be executed
as you are allowed to enter regular expressions that are several lines
long.  If the query is valid and a result set is produced, the treecontrol
is collapsed and another branch named Query:xxx is displayed where xxx
are the first few characters of the query.  If the query is malformed or
if there isn&rsquo;t a match, an Alert Dialogue is asserted, click OK and try
a different query. It should be possible to cut and paste complicated queries
that you have previously used in <b>egrep</b> into this text area and hit the
GO button and have them applied against the set of metric names found in
the treecontrol.  The results of the query, if it is successful, is another
treecontrol branch that can be navigated in the same way.  Queries are always
applied against the main branch and never against the result of previous
queries.
<p> <b>Esxplot</b> has a single menu button,  <i>File.</i>
<p> Underneath this menu
we have  <i>About,</i> <i>Import,</i> <i>Export,</i> <i>Close,</i>
<i>Preferences,</i> <i>Help</i> and <i>Exit</i>
<p> <b>About</b>
<blockquote>Displays general information about <b>esxplot</b> including
version and license
information. </blockquote>

<p> <b>Import-&gt;Dataset</b>
<p> <blockquote>The  <i>Dataset</i> submenu allows you to import data
set into  <b>esxplot</b> to be processed.  These data sets are the output of the
<b>esxtop</b> command run in batch mode (see the collecting data section below).
A general file selection dialog box will appear which allows you to select
a file for import.  There are no restrictions on file name or extension,
but esxplot will do some basic checking to insure that it is actually a
dump originating from esxtop that you are loading. As of this release, you
can only import a single data set per run of esxplot. </blockquote>

<p> <b>Import-&gt;Queries</b>
<p> <blockquote>You
can read in queries that you have used and saved in previous runs of esxplot.
 You can also craft canned queries and place them in a query file for use
later.  The format of these files are rather straight forward and can be
deduced easily by examining one.  Please note that this format could change
in subsequent releases. You can only import queries if you have a data set
already imported. Queries that are imported from a saved queries file are
immediately applied, one by one, against the metric fields in the data
set loaded,  if a query fails to produce a result set, that query is essentially
deleted. </blockquote>

<p> <b>Export-&gt;Graph</b>
<p> <blockquote>This submenu allows you to export the plot canvas
to a file in a particular image format.
Allowable formats are  <i>.bmp</i> <i>.xbm</i> <i>.xpm</i>
<i>.png</i>  and <i>.jpg</i>
<p> To have the file exported in a particular format, simply
tag the output file with the appropriate extension for the format that
you wish to write to. Note that the size of the resultant image file depends
on the size of the canvas that esxplot is currently displaying, i.e. to get
the maximum size plot, Maximize esxplot and slide the panel slider far
to the left. </blockquote>

<p> <b>Export-&gt;Columns</b>
<p> <blockquote>You can also export a subset of column data
with esxplot.  Basically the Export-&gt;Columns menu will export the metrics
that are currently selected at the time that the menu is activated.  If
you make selections that are plotted (up to 16) they will be exported to
a CSV file. However this feature is more powerful then just selecting the
plotted metrics.  Any branch of the treecontrol that is selected will be
exported as a CSV file. If you select the top of the tree, then the entire
tree is exported (not very useful). But this goes all the way to the result
set of a query! So, if you select the query that you just entered or imported
and activate File-&gt;Export-&gt;Columns, then the results of that query will be
exported to a CSV file that is suitable for reload into esxplot or other
utilities such as PERFMON or Excel,  this is a quick way to cut up those
esxtop output files that have over 100,000 columns! </blockquote>

<p> <b>Export-&gt;Queries</b>
<p> <blockquote>The
final submenu under Export is the  <b>Queries</b> submenu.  This allows you to
export all of your currently active queries to a file for later use.  Note
that this feature exports the queries themselves, not the result sets of
the queries.  To export the result sets, select the query and use the export
columns feature. The file produced can be read in to load these queries
during a latter run. </blockquote>

<p> <b>Right-Mouse-Down on  Selections</b> <blockquote><i>Right-Mouse-Down</i>
on a
selection made in the treectrl widget, brings up a context menu with two
options,
<p> <i>delete,</i>  which will delete the particular branch of the treectrl
that is selected.  This is primarily used to delete unwanted query result
sets. You cannot delete single metrics or multiple selections using this
feature, only entire data sets, or query result sets. Note that in order
to load a new dataset, you must use the  <b>Close</b> menu item to
close the Current
Dataset.
<p> <i>export,</i>  which will bring up a file selection dialog box that
will allow you to save your selctions to a csv file.  You can save multiple
selections, as well as the entire result set of a query this way. </blockquote>
<b>Close</b>

<p> <blockquote>This menu item currently has one element,
<i>Current Dataset</i>. Selecting this
will close the current dataset, clear the navigation panel and graphic
area.  You can now Import a new dataset into the tool. As you import larger
datasets, the virtual address space of esxplot increases. However, if you
unload a large dataset, the memory is garbage collected by python so opening
a dataset that is smaller in size will not demand additional memory.
</blockquote>

<p> <b>Preferences</b>

<p> <blockquote>This displays a panel with set-able parameters that control
the way esxplot
behaves.  For the 1.0 release there are not a lot of dials. You can set the
width of the plot lines to either one pixel wide (the default) or to two
pixels wide, which is sometime useful if you are creating a printed document.
The abbreviated legends check box, if checked, allows you to enter a two
digit integer in the textbox to the right, the number you enter here will
be the rightmost number of characters displayed on the legends that are
situated to the right of the graph area.  This box is not checked by default.

<p> Finally you can set the colors of the lines that are used to plot the
graphs, there are over 630 colors in the wxPython color database and you
can select these by name, you can also enter an RGB value by prefixing
the 6 digit hex value with a "#", so, for example "#0000FF" is pure blue,
where as "#FF0000" is red.   Pressing the  <i>Reset to Default Colors</i> Button
will reload the default colors, just in case you changed them to something
that you don&rsquo;t like. When you click OK on the preferences panel
the preferences
take effect and the plot is redrawn with the new values. </blockquote>

<p> <b>Help</b> <blockquote>Your reading
it :) </blockquote>
<b>Exit</b>
<p> <blockquote>What more needs to be said? </blockquote>

<p>
<h2><a name='sect3' href='#toc3'>Collecting Data</a></h2>

<p> The simplest way
to collect data is to run esxtop in batch mode and tell it to collect everything,
to do this run the following command from the service console of your ESX
host or from the vMA of your ESXi host:
<p> <font size='-1'>esxtop -a -b -n 120 &gt; dataset.csv</font>

<p>
This command will collect all metrics with a time interval of 5 seconds
(the default) and take 120 samples (about 10 minutes). This resultant file
is the target of an  <i>Import-&gt;Dataset</i> action. Use caution when you use the
 <b>-a</b> switch to esxtop on a system with a large number of virtual machines,
you could wind up with a file that has well over 50 to 100 thousand columns.
 While esxplot can handle data sets this large, having to wade through
all of that data makes response time sluggish, especially if your running
it on a Microsoft Windows desktop. If this is the case, it may be better
to run esxtop on the target system in interactive mode, select a subset
of the areas that you are interested in, perform the "W" command to write
out an "rc" file and use this file to run esxtop in batch mode as follows:

<p> <font size='-1'>esxtop -b -c esxtoprc -n 120 &gt; dataset.csv</font>

<p> where esxtoprc is the name of the
rc file that you saved during the interactive run.
<p>
<h2><a name='sect4' href='#toc4'>Options</a></h2>
<b>-d</b> <blockquote>Run esxplot
forcing all logging to  <i>stdout</i> and not to a log file </blockquote>
<b>-l</b> <i>logfile_path</i> <blockquote>Log
to the specified logfile and not to the default location,
(~/.esxplot/esxplot.log
on *nix systems,
\Documents and Settings\&lt;user&gt;\Local Settings\Application Data\esxplot\esxplot.log
for Windows systems) </blockquote>
<i>data_file</i> <blockquote>If you start esxplot from the command line,
you can specify a filename that will immediately be loaded upon when the
application starts </blockquote>

<h2><a name='sect5' href='#toc5'>Files</a></h2>
<i>data_file</i> <blockquote>A file in excel "csv" format, typically
originating from the output of <b>esxtop</b> in batch mode. </blockquote>
<i>query_file</i> <blockquote>These files
are produced by esxplot and contain queries that can be used when you run
<b>esxplot</b> at a latter time. </blockquote>
<i>image_file</i> <blockquote><b>Esxplot</b> can produce an image file of
the plot in several formats, exporting the file with the appropriate extension
will yeild an image file in that format. </blockquote>

<p>
<h2><a name='sect6' href='#toc6'>Environment</a></h2>
This program was written
in Python 2.6, and needs the  <i>wxPython</i> library <i>2.8.10</i> or
greater,along with
 the <i>numpy</i> library <i>1.3.0</i> or greater.  <i>WxPython</i> allows
you to write GUI programs
that will run on *NIX, Windows and OSX without change.  If you are so lucky
to have a <i>thinapp</i> or other type of installable for windows, you can just
double-click on the icon and get going.
<p>
<h2><a name='sect7' href='#toc7'>Diagnostics</a></h2>
Alerts will appear if
you&rsquo;ve done something wrong.  Otherwise, if the application dies
mysteriously,
or hangs, try looking in the logfile or console for a traceback.  Send the
traceback to &lt;geoffw at durganetworks dot com&gt;
<p>
<h2><a name='sect8' href='#toc8'>Bugs</a></h2>
Report all bugs, misfeatures,
and feature requests to the author.
<p>
<h2><a name='sect9' href='#toc9'>Author</a></h2>
Geoff White &lt;geoffw at durganetworks
dot com&gt;
<p>
<h2><a name='sect10' href='#toc10'>See Also</a></h2>
<a href='esxtop.1'>esxtop (1)</a>

<p> There is also an excellent whitepaper on interpreting
esxtop statistics  at...
<p> <a href='http://communities.vmware.com/docs/DOC-9279'>
http://communities.vmware.com/docs/DOC-9279</a>

<p> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Synopsis</a></li>
<li><a name='toc2' href='#sect2'>Description</a></li>
<li><a name='toc3' href='#sect3'>Collecting Data</a></li>
<li><a name='toc4' href='#sect4'>Options</a></li>
<li><a name='toc5' href='#sect5'>Files</a></li>
<li><a name='toc6' href='#sect6'>Environment</a></li>
<li><a name='toc7' href='#sect7'>Diagnostics</a></li>
<li><a name='toc8' href='#sect8'>Bugs</a></li>
<li><a name='toc9' href='#sect9'>Author</a></li>
<li><a name='toc10' href='#sect10'>See Also</a></li>
</ul>
</body>
</html>
"""